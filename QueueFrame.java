/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SECProject;

import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author anush
 */
public class QueueFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ArrayList<User> userQueue;

    public QueueFrame() {
        initComponents();
        queueEmptyLabel.setVisible(false);
        this.userQueue = ListUsers();
        singleselection();
        addrowtotable(userQueue);
        removeBtn.setEnabled(false);
        pauseBtn.setEnabled(false);
        unpauseBtn.setEnabled(false);
        //jTable2.setModel(tableModel);
    }

    public void singleselection() {
        queueTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    }

    public void addToUsers(User user) {
        userQueue.add(user);
        addrowtotable(userQueue);
    }

    public JTable getTable() {
        return this.queueTable;
    }
    
    public void setButtonActivity(String action)
    {
        if(action=="Pause")
        {
            pauseBtn.setEnabled(false);
            unpauseBtn.setEnabled(true);
        }
        else if (action == "Unpause")
        {
            pauseBtn.setEnabled(true);
            unpauseBtn.setEnabled(false);
        }
            
    }
    public ArrayList ListUsers() {
        ArrayList<User> queue = new ArrayList<User>();
        Random r = new Random();
        int randomid = r.nextInt((4 - 0) + 1) + 0;
        System.out.println(randomid);
        User[] araayUser = new User[4];
        araayUser[0] = new User(1, "Anushree", "anushree@gmail.com");
        araayUser[1] = new User(2, "Pranali", "pranali@gmail.com");
        araayUser[2] = new User(3, "Anjali", "anjali@gmail.com");
        araayUser[3] = new User(4, "Nijie", "nijie@gmail.com");
        for (int i = 0; i < randomid; i++) {
            queue.add(araayUser[i]);
        }
        return queue;

    }

    public void addrowtotable(ArrayList<User> users) {
        DefaultTableModel model = (DefaultTableModel) queueTable.getModel();

        model.setRowCount(0);
        if (userQueue.size() == 0) {
            queueEmptyLabel.setVisible(true);
            removeBtn.setEnabled(false);
            pauseBtn.setEnabled(false);
            unpauseBtn.setEnabled(false);
        } else {
            queueEmptyLabel.setVisible(false);
        }
        Object row[] = new Object[2];
        for (int i = 0; i < userQueue.size(); i++) {
            //row[0] = a1.get(i).email;
            row[0] = users.get(i).name;
            row[1] = users.get(i).status;
            //row[2] = i;
            model.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        pauseBtn = new javax.swing.JButton();
        unpauseBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        queueTable = new javax.swing.JTable();
        queueEmptyLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Queue");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        pauseBtn.setText("Pause");
        pauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBtnActionPerformed(evt);
            }
        });

        unpauseBtn.setText("Unpause");
        unpauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unpauseBtnActionPerformed(evt);
            }
        });

        queueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        queueTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        queueTable.setEditingColumn(0);
        queueTable.setEditingRow(0);
        queueTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                queueTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(queueTable);
        queueTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        queueEmptyLabel.setText("Queue is Empty!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queueEmptyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(152, 152, 152))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pauseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(unpauseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(queueEmptyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pauseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unpauseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
        int selectedindex = queueTable.getSelectedRow();
        System.out.println(selectedindex);
        if (selectedindex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user");
        } else {
            LoginFrame loginFrame = new LoginFrame(this, userQueue.get(selectedindex), "Remove", selectedindex);
            loginFrame.setVisible(true);
        }

        //a.remove(selectedindex);
        //addrowtotable(a);
    }//GEN-LAST:event_removeBtnActionPerformed

    private void unpauseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unpauseBtnActionPerformed
        // TODO add your handling code here:

        int selectedindex = queueTable.getSelectedRow();
        System.out.println(selectedindex);
        if (selectedindex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user");
        } else {
            LoginFrame loginFrame = new LoginFrame(this, userQueue.get(selectedindex), "Unpause", selectedindex);
            loginFrame.setVisible(true);
        }
    }//GEN-LAST:event_unpauseBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        /*User u1 = new User(1, "e", "e@gmail.com");
        a.add(u1);
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        addrowtotable(a);*/
        //Add add=new Add(this);
        LoginFrame loginFrame = new LoginFrame(this, "Add");
        loginFrame.setVisible(true);

    }//GEN-LAST:event_addBtnActionPerformed

    private void pauseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBtnActionPerformed
        // TODO add your handling code here:
        int selectedindex = queueTable.getSelectedRow();
        System.out.println(selectedindex);
        if (selectedindex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user");
        } else {
            LoginFrame loginFrame = new LoginFrame(this, userQueue.get(selectedindex), "Pause", selectedindex);
            loginFrame.setVisible(true);
        }
    }//GEN-LAST:event_pauseBtnActionPerformed

    private void queueTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_queueTableMouseClicked
        // TODO add your handling code here:
        tblClicked(evt);
    }//GEN-LAST:event_queueTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueueFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pauseBtn;
    private javax.swing.JLabel queueEmptyLabel;
    private javax.swing.JTable queueTable;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton unpauseBtn;
    // End of variables declaration//GEN-END:variables

    private void tblClicked(MouseEvent evt) {
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        String s1 = source.getModel().getValueAt(row, 1) + "";
        System.out.println("s1" + s1);

        String s2 = "Queued";
        if (s1.equalsIgnoreCase(s2)) {
            pauseBtn.setEnabled(true);
            unpauseBtn.setEnabled(false);
            removeBtn.setEnabled(true);
        }
        String s3 = "Paused";
        if (s1.equalsIgnoreCase(s3)) {
            pauseBtn.setEnabled(false);
            unpauseBtn.setEnabled(true);
            removeBtn.setEnabled(true);

            
        }
    }
}
